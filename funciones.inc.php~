<?php
/*##########################################################
* Autor: Rodrigo Aguilar Saavedra
* Ing. en Bioinformatica
* Universidad de Talca
* 2010
*/
$RUTASERVER = "/e-VE/";
//set_time_limit(60);

//==== Redirect... Try PHP header redirect, then Java redirect, then try http redirect.:
function redirect($url){
    if (!headers_sent()){    //If headers not sent yet... then do php redirect
        header('Location: '.$url); exit;
    }else{                    //If headers are sent... do java redirect... if java disabled, do html redirect.
        echo '<script type="text/javascript">';
        echo 'window.location.href="'.$url.'";';
        echo '</script>';
        echo '<noscript>';
        echo '<meta http-equiv="refresh" content="0;url='.$url.'" />';
        echo '</noscript>'; exit;
    }
}

function check_admin($sid){
	if($_SESSION['session_usuario_administrador'] != 1)
		redirect("../index.php?sid=$sid");
}

/*##########################################################
**# Funciones para el manejo de fechas
*/

/*
* Convierte fecha de mysql a normal
* @param fecha Fecha de entrada en formato  aaaa-mm-dd (tipo MySQL)
* @return la fecha en formato dd/mm/aaaa
*/
function cambia_fecha_a_normal($fecha){
    ereg( "([0-9]{2,4})-([0-9]{1,2})-([0-9]{1,2})", $fecha, $mifecha);
    $lafecha=$mifecha[3]."/".$mifecha[2]."/".$mifecha[1];
    return $lafecha;
}

/*
* Convierte fecha de normal a mysql
* @param fecha Fecha de entrada en formato  dd/mm/aaaa (tipo normal)
* @return la fecha en formato aaaa-mm-dd
*/
function cambia_fecha_a_mysql($fecha){
    ereg( "([0-9]{1,2})/([0-9]{1,2})/([0-9]{2,4})", $fecha, $mifecha);
    $lafecha=$mifecha[3]."-".$mifecha[2]."-".$mifecha[1];
    return $lafecha;
} 

function add_days($fecha, $ndiasasumar)
{
	list($dia, $mes, $ano) = split("/", $fecha);
	$nueva = mktime(0, 0, 0, $mes, $dia, $ano) + $ndiasasumar * 24 * 60 * 60;
	$nuevafecha = date("d/m/Y", $nueva);
	return($nuevafecha);
}

function add_seconds($hour,$date,$seconds){
	list($hr, $min, $seg) = split(":", $hour);
	list($ano, $mes, $dia) = split("-", $date);
	$nueva = mktime($hr, $min, $seg, $mes, $dia, $ano) + $seconds;
	$nuevaHoraFecha = array(date("H:i:s", $nueva),date("Y-m-d", $nueva));
	return($nuevaHoraFecha);
}


function add_work_days($fecha, $ndiashabilesasumar)
{
	$i = 0;
	while ($i < $ndiashabilesasumar) {
		$fecha = add_days($fecha, 1);
		list($dia, $mes, $ano) = split("/", $fecha);
		if (date("N", mktime(0, 0, 0, $mes, $dia, $ano)) != 6 && date("N", mktime(0, 0, 0, $mes, $dia, $ano)) != 7)
			$i += 1;
	}
	return $fecha;
}

function suma_dias_a_fecha_2($dias,$fecha){
	$array_date = explode("-", $fecha);
    $fecha = date("Y-m-d", mktime(0, 0, 0, $array_date[1], $array_date[2] + $dias, $array_date[0]));
	return $fecha;
}

function retorna_semana($fecha){
	$array_date = explode("-", $fecha);
    	$semana = date("W", mktime(0, 0, 0, $array_date[1], $array_date[2], $array_date[0]));
	return $semana;
}

function retorna_unix($fecha,$hora){
	$array_date = explode("-", $fecha);
	$array_hour = explode(":",$hora);
    	$unix = mktime($array_hour[0], $array_hour[1], $array_hour[2], $array_date[1], $array_date[2], $array_date[0]);
	return $unix;
}

function retorna_anho($fecha){
	ereg( "([0-9]{2,4})-([0-9]{1,2})-([0-9]{1,2})", $fecha, $mifecha);
    return $mifecha[1];
}

/*###################################################
** Funciones para el manejo de la base de datos
*/

function check_mysql(){
	require('config.inc.php');
	// Conectando y seleccionando la base de datos
	$link = mysql_connect(EVE_SQL_HOST_DATABASE, EVE_SQL_HOST_DATABASE_USER_NAME, EVE_SQL_DATABASE_PASSWORD);
	
	if(!$link){
		return false;
	}
	else{
		$valor = mysql_select_db(EVE_SQL_DATABASE_NAME);
		if($valor){
			mysql_close($link);
			return true;
		}
		else{
			return false;
		}
	}
}


/*
* Realiza una consulta SQL una base de datos MySQL definida en config.inc.php
* @param consulta La consulta SQL
* @return Una matriz tipo MySQL con el resultado de la consulta
*/
function consulta_sql($consulta){
	require('config.inc.php');
	// Conectando y seleccionando la base de datos
	$link = mysql_connect(EVE_SQL_HOST_DATABASE, EVE_SQL_HOST_DATABASE_USER_NAME, EVE_SQL_DATABASE_PASSWORD)
		or die('No se pudo conectar al servidor MySQL: ' . mysql_error());
	mysql_select_db(EVE_SQL_DATABASE_NAME) or die('No se pudo seleccionar la base de datos: '.mysql_error() );
	
	// Realizando la consulta
	$result = mysql_query($consulta) or die('Consulta fallida: ' . mysql_error());
	
	// cerrando la conexion
	mysql_close($link);
	return $result;
}

function comando_sql($consulta){
	require('config.inc.php');
	// Conectando y seleccionando la base de datos
	$link = mysql_connect(EVE_SQL_HOST_DATABASE, EVE_SQL_HOST_DATABASE_USER_NAME, EVE_SQL_DATABASE_PASSWORD)
		or die('No se pudo conectar al servidor MySQL: ' . mysql_error());
	mysql_select_db(EVE_SQL_DATABASE_NAME) or die('No se pudo seleccionar la base de datos: '.mysql_error() );
	
	// Realizando la consulta
	mysql_query($consulta) or die('Comando fallido: ' . mysql_error());
	$affected = mysql_affected_rows($link);
	// cerrando la conexion
	mysql_close($link);
	return $affected; //si es > 0 comando se ejecuto correctamente
}

function bitacora($nota){
	$fecha = date('Y-m-d');
	$hora = date('H:i:s');
	comando_sql("INSERT INTO eve_bitacora(usuario_id,fecha,hora,observacion) VALUES(".$_SESSION['session_usuario_id'].",'$fecha','$hora','$nota')");
}

function ultima_visita($ID){
	require('config.inc.php');
	$fechahora = date('Y-m-d H:i:s');
	consulta_sql("UPDATE usuario SET ultimo_ingreso='".$fechahora."' WHERE id=".$ID);
}

function estadisticas($tipo,$nombre){
	$resultado = consulta_sql("SELECT valor,id FROM eve_estadistica WHERE tipo='$tipo' AND nombre='$nombre'");
	if(mysqli_num_rows($resultado) == 0){
		comando_sql("INSERT INTO eve_estadistica(nombre,tipo,valor) VALUES('$nombre','$tipo',1)");
	}
	else{
		$datos_estadisticos = mysqli_fetch_array($resultado);
		$conteo = $datos_estadisticos[0];
		$conteo++;
		consulta_sql("UPDATE eve_estadistica SET valor=".$conteo." WHERE id=".$datos_estadisticos[1]);
	}
}

function enviar_mail($to,$toname,$from,$fromname,$subject,$body,$altbody='',$cc1='',$cc1name='',$cc2='',$cc2name=''){
	require('config.inc.php');
	include_once('PHPMailer/class.phpmailer.php');
	
	if(get_parameter('MAIL_METHOD') == 'MAIL'){
		$message = $body;
		
		$headers = "From: \"".$fromname."\" <".$from.">\r\n";
		
		$headers .= "To: \"".$toname."\" <".$to.">\r\n";
		$headers .= "Subject: \"".$subject."\"\r\n";
		
		$headers .= "MIME-Version: 1.0\r\n";
		$headers .= "Content-Type: text/html; charset=iso-8859-1\r\n";
		
		$ok = 0;
		
		if($cc1 != '' && $cc1name != ''){
			//$headers .= "Cc: \"".$cc1name."\" <".$cc1.">\n";
			if(!mail ($cc1, $subject, $message, $headers)) {
				$ok = 0;
			} else {
				$ok = 1;
			}
		}
		if($cc2 != '' && $cc2name != ''){
			//$headers .= "Bcc: \"".$cc2name."\" <".$cc2.">\n";
			if(!mail ($cc2, $subject, $message, $headers)) {
				$ok = 0;
			} else {
				$ok = 1;
			}
		}
		if(!mail ($to, $subject, $message, $headers)) {
			$ok = 0;
		} else {
			$ok = 1;
		}
			
		if($ok == 1){
			return 1;
		}
		else{
			return "Error al enviar el correo";
		}
		
	}
	elseif(get_parameter('MAIL_METHOD') == 'SMTP'){
		$mail             = new PHPMailer();
		$mail->IsSMTP(); // telling the class to use SMTP
		$mail->Host       = get_parameter('MAIL_SMTP_HOST'); // SMTP server
		$mail->From       = $from;
		$mail->FromName   = $fromname;
		
		$mail->Subject    = $subject;
		
		$mail->AltBody    = $altbody;
		
		$mail->MsgHTML($body);
		
		$mail->AddAddress($to, $toname);           // attachment
		
		if($cc1 != '' && $cc1name != '')
			$mail->AddAddress($cc1, $cc1name);
		if($cc2 != '' && $cc2name != '')	
			$mail->AddAddress($cc2, $cc2name);
		
		if(!$mail->Send()) {
			return $mail->ErrorInfo;
		} else {
			return 1;
		}
	}
	elseif(get_parameter('MAIL_METHOD') == 'SMTP_AUTH'){
		include_once("PHPMailer/class.smtp.php");
		
		$mail             = new PHPMailer();
		$mail->IsSMTP(); // telling the class to use SMTP
		$mail->SMTPAuth   = true;
		$mail->SMTPSecure = "tls";
		$mail->Port       = 465;
		$mail->Username   = get_parameter('MAIL_SMTP_HOST_AUTH_USER');
		$mail->Password   = get_parameter('MAIL_SMTP_HOST_AUTH_PASS');
		$mail->Host       = get_paramater('MAIL_SMTP_HOST_AUTH'); // SMTP server
		$mail->From       = $from;
		$mail->FromName   = $fromname;
		
		$mail->Subject    = $subject;
		
		//$mail->AltBody    = "To view the message, please use an HTML compatible email viewer!"; // optional, comment out and test
		
		$mail->MsgHTML($body);
		
		$mail->AddAddress($to, $toname);           // attachment
		
		if($cc1 != '' && $cc1name != '')
			$mail->AddAddress($cc1, $cc1name);
		if($cc2 != '' && $cc2name != '')	
			$mail->AddAddress($cc2, $cc2name);
		
		if(!$mail->Send()) {
			return $mail->ErrorInfo;
		} else {
			return 1;
		}
	}
	elseif(get_parameter('MAIL_METHOD') == 'SENDMAIL'){
		$mail             = new PHPMailer();
		$mail->IsSendmail();
		$mail->From       = $from;
		$mail->FromName   = $fromname;
		
		$mail->Subject    = $subject;
		
		//$mail->AltBody    = "To view the message, please use an HTML compatible email viewer!"; // optional, comment out and test
		
		$mail->MsgHTML($body);
		
		$mail->AddAddress($to, $toname);           // attachment
		
		if($cc1 != '' && $cc1name != '')
			$mail->AddAddress($cc1, $cc1name);
		if($cc2 != '' && $cc2name != '')	
			$mail->AddAddress($cc2, $cc2name);
		
		if(!$mail->Send()) {
			return $mail->ErrorInfo;
		} else {
			return 1;
		}
	}
	else{
		
	}
}

function get_parameter($param){
	$res = consulta_sql("SELECT valor FROM eve_parametro WHERE code='$param'");
	$data = mysqli_fetch_array($res);
	return $data[0];
}

function get_user_option($user,$opt){
	$res = consulta_sql("SELECT valor FROM eve_opciones_de_usuario WHERE code='$opt' AND usuario_id=$user");
	if(mysqli_num_rows($res) == 0){
		return 'NULL';
	}
	else{
		$data = mysqli_fetch_array($res);
		return $data[0];
	}
}

function get_user_permission($user,$opt){

	$SQL = "SELECT eve_tipo_de_permiso_usuario.value 
		FROM eve_tipo_de_permiso_usuario,eve_usuario_has_tipo_de_permiso_usuario
		WHERE code='$opt' 
		AND usuario_id=$user
		AND eve_usuario_has_tipo_de_permiso_usuario.eve_tipo_de_permiso_usuario_id=eve_tipo_de_permiso_usuario.id";
		
	$res = consulta_sql($SQL);
	if(mysqli_num_rows($res) == 0){
		return 'NULL';
	}
	else{
		$data = mysqli_fetch_array($res);
		return $data[0];
	}
}

function genpass(){
	return substr(MD5(microtime() * mktime()),0,6);
}

function genpassnumber(){
	return substr(microtime() * mktime(),0,6);
}

function get_last_sensor_value($sensor,$station){
	$SQL = "SELECT medicion.fecha,medicion.hora,medicion.medicion
		FROM medicion,instrumento,tipo_instrumento,estacion
		WHERE medicion.instrumento_id=instrumento.id
		AND instrumento.tipo_instrumento_id=tipo_instrumento.id
		AND instrumento.estacion_id=$station
		AND tipo_instrumento.code='$sensor'
		ORDER BY medicion.fecha DESC, medicion.hora DESC, tipo_instrumento.id
		LIMIT 1";
		
	$result_medicion = consulta_sql($SQL);
	
	if(mysqli_num_rows($result_medicion) == 0){
		return "NULL";
	}
	else{
		$datos_medicion = mysqli_fetch_array($result_medicion);
		return $datos_medicion[0]."|".$datos_medicion[1]."|".$datos_medicion[2];
	}
}

function getStationState($state){
        if($state == ("O")){
            return "Offline";
        }
        else if($state == ("D")){
            return "Descargando";
        }
        else if($state == ("S")){
            return "Detenida";
        }
        else if($state == ("C")){
            return "En Modo De Cese de Descarga";
        }
        else if($state == ("E")){
            return "Error Desconocido";
        }
        else{
            return "Error";
        }
}

function array_insert($array,$offset,$insert){

	$parcial = array_slice($array,0,$offset+1);
	$parcial[] = $insert;
	$tail = array_slice($array,$offset+1);
	$result = array_merge($parcial,$tail);
	
	return $result;
}

?>